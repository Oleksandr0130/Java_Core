Допустим дан List<String>. Вам необходимо реализовать следующие методы:
получить строку, которая является объединением всех строк в исходном листе. Например:
{“Hello”, “Java”,”Programming”} -> “HelloJavaProgramming”

Получить аналогичную строку, но слова должны быть начиная с самого длинного до самого короткого:  Например:
{“Hello”, “Java”,”Programming”} -> “ProgrammingHelloJava”

Если заданное слово встречается ы списке более одного раза, заменить его на фразу “ [повтор] “ + слово:  Например:
{“Hello”, “Java”,”Programming”,”Java”}, “java” -> {“Hello”, “Java”,”Programming”,”Повтор Java”}


* Сложное (по желанию): Допустим дан List<Account>. Класс Accoun определен так же как и в уроке 15:
private String iban;
private double balance;
private Person owner;
private MyDate openDate;

Ваша задача реализовать следующий функционал:
получить List<Account> всех счетов с балансом больше заданного числа
 получить List<Account> всех счетов заданного владельца
